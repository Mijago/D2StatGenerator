import pandas as pd
from app.reports.ReportBase import Report
import plotly.express as px


class WeaponKillTreeReport(Report):
    def save(self):
        super().save()

    def getName(self) -> str:
        return "[ALL] chart_tree - weapon kills; by type"

    def __init__(self, membershipType, membershipId, manifest) -> None:
        super().__init__(membershipType, membershipId, manifest)

    def generate(self, data) -> Report:
        df = self.generateData(data)

        fig = px.treemap(
            df, path=[px.Constant("all"), "weaponType", "weapon", "killType"], values='kills', template="plotly_dark",
            branchvalues="total", labels=["kills"],
            title="Weapon kills by Archetype - split into precision and non-precision kills<br><sup>Generated by <a href='https://twitter.com/MijagoCoding/'>Mijago</a></sup>"
        )
        fig.update_traces(texttemplate=('%{label}<br>%{value} Kills (%{percentParent:.1%})'))
        self.fig = fig

        return self

    def generateData(self, data):
        weaponType = []
        weapon = []
        killType = []
        kills = []

        for datapoint in data:
            if "entries" not in datapoint: continue
            for entry in datapoint["entries"]:
                if entry["player"]["destinyUserInfo"]["membershipId"] != str(self.membershipId): continue
                if "weapons" not in entry["extended"]: continue
                for wp in entry["extended"]["weapons"]:
                    precision = 1 * wp["values"]["uniqueWeaponPrecisionKills"]["basic"]["value"]
                    normal = 1 * wp["values"]["uniqueWeaponKills"]["basic"]["value"] - precision
                    for idx, value in enumerate([normal, precision]):
                        weaponType.append(self.manifest.ItemDefinitions[str(wp["referenceId"])]["itemTypeDisplayName"])
                        weapon.append(self.manifest.ItemDefinitions[str(wp["referenceId"])]["displayProperties"]["name"])
                        killType.append("Non-Precision" if idx == 0 else "Precision")
                        kills.append(value)

        df = pd.DataFrame({
            "weaponType": weaponType,
            "weapon": weapon,
            "killType": killType,
            "kills": kills,
        })
        return df
